{"version":3,"sources":["logic/trees.js","logic/goalSelectors.js","logic/dailyGoals.js","logic/goalProcessing.js","ducks/goals.js","ducks/page.js","components/page-main/GoalList.js","ducks/dialog.js","containers/InteractiveGoalList.js","components/page-main/DailyGoalList.js","containers/InteractiveDailyGoalList.js","components/page-main/PageMain.js","components/common/OverflowMenu.js","components/page-goal/DailyGoalHistory.js","components/page-goal/EditSubgoalModal.js","containers/EditSubgoalModalContainer.js","components/page-goal/SubgoalListItem.js","components/page-goal/SubgoalList.js","ducks/notifications.js","containers/EditableSubgoalList.js","components/page-goal/PageGoal.js","components/common/NavBar.js","components/dialog/Dialog.js","components/dialog/InfoDialog.js","components/dialog/ConfirmDialog.js","components/dialog/InputDialog.js","components/dialog/ColorPickerDialog.js","containers/GlobalDialog.js","containers/GlobalNotification.js","components/App.js","containers/PagedApp.js","store/index.js","index.js"],"names":["breadthFirstSearch","tree","isTarget","getChildren","queue","slice","length","subtree","shift","concat","findGoalById","goals","id","subgoals","goal","flattenGoals","flattened","stack","reverse","head","pop","push","children","TYPE_MANUAL","TYPE_TARGET","TYPE_DEADLINE","getGoalColor","color","hash","md5","name","index","i","parseInt","isLeafNode","isGoalCompleted","completed","completedImplicit","isDailyGoal","daily","CREATE_GOAL","ADD_SUBGOAL","MOVE_SUBGOAL","SET_GOAL_NAME","SET_GOAL_COLOR","TOGGLE_GOAL_COMPLETE","DELETE_GOAL","ADD_TO_DAILY","REMOVE_FROM_DAILY","REMOVE_LATEST_FROM_DAILY","SET_DAILY_TYPE","CONFIGURE_DAILY_TYPE","TOGGLE_GOAL_DAILY","INITIAL_STATE","type","typeConfig","history","nextId","mutateGoal","state","goalId","callback","newState","cloneDeep","reducer","arguments","undefined","action","applyCreateGoal","subgoal","points","applyAddSubgoal","dst","srcParent","src","parentId","dstParent","dstIndex","isNaN","splice","applyMoveSubgoal","findIndex","parent","sg","goalIndex","applyDeleteGoal","timestamp","indexOf","target","Date","map","filter","date","getFullYear","getMonth","getDate","sort","a","b","latestTimestamp","toISOString","console","warn","newType","now","setDate","config","setGoalName","toggleGoalComplete","deleteGoal","addToDaily","removeLatestFromDaily","getGoalsWithCompleteness","createSelector","newGoals","markCompletedImplicit","allSubgoalsCompleted","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","value","err","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","getActiveDailyGoals","isActiveDailyGoal","SET_SELECTED_GOAL","GO_BACK","selectedGoalId","Object","objectSpread","toConsumableArray","setSelectedGoal","GoalList","_this","this","onGoalClick","props","goalList","react_default","createElement","GoalList_GoalListItem","key","onChangeGoalColor","onChangeGoalName","onDeleteGoal","className","onClick","onNewGoal","Component","GoalListItem","_ref","Math","floor","calculateGoalProgress","reduce","acc","cur","e","stopPropagation","OPEN_INFO_DIALOG","OPEN_CONFIRM_DIALOG","OPEN_INPUT_DIALOG","OPEN_COLORPICKER_DIALOG","CLOSE_DIALOG","DIALOG_TYPE_INFO","DIALOG_TYPE_INPUT","DIALOG_TYPE_COLORPICKER","DIALOG_TYPE_CONFIRM","message","isOpen","onAccept","onReject","openConfirmDialog","openInputDialog","dispatch","createGoal","openColorpickerDialog","setGoalColor","connect","DailyGoalList","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","days","currentDate","toLocaleString","month","day","date1","date2","isSameDay","_this2","counts","historyDates","dateString","_loop","historyDate","ourDate","find","other","_this3","reversedDays","getDayCounts","formatDate","isToday","onMarkDay","onContextMenu","preventDefault","onUnmarkDay","PageMain","InteractiveDailyGoalList","InteractiveGoalList","menuRoot","document","getElementById","OverflowMenu","el","renderMenu","bind","assertThisInitialized","handleBlur","appendChild","removeChild","menuRef","elem","relatedTarget","insideMenu","parentNode","onCloseMenu","ReactDOM","createPortal","visible","anchorRef","current","style","pos","getBoundingClientRect","window","innerWidth","right","top","left","tabIndex","ref","focus","onBlur","items","item","text","React","DailyGoalHistory","getCount","handleChangeMonth","year","data","otherDate","count","maxCount","num","round","rows","row","daysBefore","getDay","isSelectedMonth","amount","setMonth","setState","_this$generateRows","generateRows","monthString","getMonthString","getCountClass","EditSubgoalModal","handleInputTitle","handleViewChildren","titleRef","createRef","event","clipboardData","getData","execCommand","newTitle","textContent","onChangeTitle","onRequestClose","onViewChildren","completedChildren","totalChildren","Fragment","renderDailyControls","components_page_goal_DailyGoalHistory","controls","completions","progress","htmlFor","min","onChange","onConfigureDailyType","width","pad","numString","daysLeft","ceil","convertConfigToInput","onChangeDailyType","react_contenteditable_default","innerRef","html","disabled","tagName","onPaste","handlePasteAsPlainText","renderProgress","renderDaily","onToggleComplete","onToggleDaily","onDelete","ownProps","subgoalId","title","onDeleted","configureDailyType","SubgoalListItem","hasChildren","isComplete","isExpanded","isDaily","onToggleExpanded","onComplete","onOpenMenu","depth","href","SubgoalList","getTreeData","renderItem","convertGoalToTreeItem","handleOpenMenu","handleCloseMenu","handleExpand","handleCollapse","handleDragEnd","openSubgoalDialog","closeSubgoalDialog","menu","open","modal","collapsedGoals","isChildrenLoading","rootId","itemId","parentGoal","onErrorNotification","onDragEnd","setTimeout","onExpand","onCollapse","provided","snapshot","assign","draggableProps","dragHandleProps","components_page_goal_SubgoalListItem","onCompleteGoal","_this4","Tree","offsetPerLevel","isDragEnabled","isNestingEnabled","SubgoalList_AddSubgoal","onAddKeyPress","newSubgoalDepth","components_common_OverflowMenu","lib_default","contentLabel","overlayClassName","closeTimeoutMS","EditSubgoalModalContainer","AddSubgoal","_ref2","placeholder","contentEditable","onKeyDown","SHOW_NOTIFICATION","DISMISS_NOTIFICATION","notifications","dismissAfter","n","shiftKey","addSubgoal","moveSubgoal","page","showNotification","getTime","PageGoal","EditableSubgoalList","NavBar","hasBack","onGoBack","Dialog","onClose","InfoDialog","components_dialog_Dialog","ConfirmDialog","others","objectWithoutProperties","InputDialog","handleChangeInput","handleSubmit","nextProps","_this$props","onSubmit","autoFocus","ColorPickerDialog","renderColorButtons","generateInitialState","selected","newSelected","buttons","selectedClass","handleChangeSelected","dialog","components_dialog_ConfirmDialog","dialog_InfoDialog","components_dialog_InputDialog","components_dialog_ColorPickerDialog","onDismiss","notification","stateProps","dispatchProps","deactivate","NotificationStack","App","selectedGoal","components_common_NavBar","page_main_PageMain","page_goal_PageGoal","containers_GlobalDialog","GlobalNotification","root","combineReducers","reducers","store","applyMiddleware","save","createStore","createStoreWithMiddleware","load","render","es","PagedApp","ReactModal","setAppElement"],"mappings":"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","file":"static/js/main.22fca14c.chunk.js","sourcesContent":["/**\r\n * Performs a breadth first search on a tree-like object, returning the object if found,\r\n * and null otherwise.\r\n * \r\n * @typeparam T Tree/node type\r\n * @param {T} tree The root node of the tree to search\r\n * @param {(node: T) => bool} isTarget A predicate to determine whether the target of\r\n *                  the search has been found.\r\n * @param {(node: T) => T[]} getChildren A function that retrieves the children (if any) of\r\n *                    a given node in the tree.\r\n * @returns Found object or null\r\n */\r\nexport function breadthFirstSearch(tree, isTarget, getChildren) {\r\n  let queue = getChildren(tree).slice();\r\n  while (queue.length > 0) {\r\n    // Remove head of queue\r\n    let subtree = queue.shift();\r\n\r\n    // Check if we've found the target yet\r\n    if (isTarget(subtree))\r\n      return subtree;\r\n\r\n    // Queue children\r\n    queue = queue.concat(getChildren(subtree));\r\n  }\r\n\r\n  return null;\r\n}\r\n\r\n/**\r\n * Performs a depth first search on a tree-like object, returning the object if found,\r\n * and null otherwise.\r\n * \r\n * @typeparam T Tree/node type\r\n * @param {T} tree The root node of the tree to search\r\n * @param {(node: T) => bool} isTarget A predicate to determine whether the target of\r\n *                  the search has been found.\r\n * @param {(node: T) => T[]} getChildren A function that retrieves the children (if any) of\r\n *                    a given node in the tree.\r\n * @returns Found object or null\r\n */\r\nexport function depthFirstSearch(tree, isTarget, getChildren) {\r\n  let stack = getChildren(tree).slice();\r\n  stack.reverse();\r\n\r\n  while (stack.length > 0) {\r\n    // Remove head of stack\r\n    let subtree = stack.pop();\r\n\r\n    // Check if we've found the target yet\r\n    if (isTarget(subtree))\r\n      return subtree;\r\n\r\n    // Stack children\r\n    let children = getChildren(subtree).slice();\r\n    children.reverse();\r\n    stack = stack.concat(children);\r\n  }\r\n\r\n  return null;\r\n}","import { breadthFirstSearch, depthFirstSearch } from './trees.js';\r\n\r\n/**\r\n * Finds a Goal object by its ID in a tree of goals\r\n * \r\n * @param {Goal[]} goals Array of goals in tree structure\r\n * @param {number} id ID of goal\r\n */\r\nexport function findGoalById(goals, id) {\r\n  return breadthFirstSearch(\r\n    { subgoals: goals },\r\n    (goal) => id === goal.id,\r\n    (goal) => goal.subgoals\r\n  );\r\n}\r\n\r\n/**\r\n * Finds a Goal object by its position/index in a tree of goals.\r\n * This position depends upon the Goal's position when the Goal\r\n * array is flattened out using a depth-first search, with lower\r\n * indices being visited before higher indices.\r\n * \r\n * @param {Goal[]} goals Array of goals in tree structure\r\n * @param {number} index Index of goal to find\r\n */\r\nexport function findGoalByIndex(goals, index) {\r\n  let i = -1;\r\n  return depthFirstSearch(\r\n    { subgoals: goals },\r\n    (goal) => (++i) === index,\r\n    (goal) => goal.subgoals\r\n  );\r\n}\r\n\r\n/**\r\n * Flattens an array of Goals from a tree-like structure\r\n * into a single array of the same Goals, with all of the\r\n * Goals' children recursively added to the array. The Goal\r\n * objects in this final array will be the same as they were\r\n * in the tree-like structure, i.e. will still contain a list\r\n * of their own subgoals/children.\r\n * \r\n * @param {Goal[]} goals Array of goals in tree structure\r\n */\r\nexport function flattenGoals(goals) {\r\n  let flattened = [];\r\n  let stack = goals.slice();\r\n  stack.reverse();\r\n\r\n  while (stack.length > 0) {\r\n    let head = stack.pop();\r\n\r\n    // Add goal to flattened list\r\n    flattened.push(head);\r\n\r\n    // Stack goal children, with the first child at the head of the stack\r\n    let children = head.subgoals.slice();\r\n    children.reverse();\r\n    stack = stack.concat(children);\r\n  }\r\n\r\n  // Return flattened list\r\n  return flattened;\r\n}","export const TYPE_MANUAL = 'manual';\r\nexport const TYPE_TARGET = 'target';\r\nexport const TYPE_DEADLINE = 'deadline';","import md5 from 'blueimp-md5';\r\n\r\n/**\r\n * Calculates the progress of a goal as a floating point number from\r\n * 0 to 1.\r\n * \r\n * @param {Goal} goal Goal object for which to calculate progress of completion\r\n */\r\nexport function calculateGoalProgress(goal) {\r\n  if (isGoalCompleted(goal))\r\n    return 1;\r\n  else if (goal.subgoals.length === 0)\r\n    return 0;\r\n  else\r\n    return goal.subgoals.reduce(\r\n      (acc, cur) => acc + calculateGoalProgress(cur),\r\n      0\r\n    ) / goal.subgoals.length;\r\n}\r\n\r\n/**\r\n * Computes a unique color based on the goal, returning a color category in the\r\n * form of a string like 'color-X', where X is a number between 0 and 31 inc.,\r\n * corresponding to the goal's unique color.\r\n * \r\n * @param {Goal} goal Goal for which to compute color\r\n */\r\nexport function getGoalColor(goal) {\r\n  if (goal.color) {\r\n    return goal.color;\r\n  }\r\n\r\n  const NUM_COLORS = getNumGoalColors();\r\n\r\n  // Compute simple hash from goal name\r\n  let hash = md5(goal.name);\r\n  let index = 0;\r\n  for (let i = 0; i < 32; i++) {\r\n    index = (16 * index + parseInt(hash[i], 16)) % NUM_COLORS;\r\n  }\r\n\r\n  return `color-${index}`;\r\n}\r\n\r\nexport function getNumGoalColors() {\r\n  // TODO: get this constant to sync with CSS somehow...?\r\n  return 32;\r\n}\r\n\r\n/**\r\n * Checks whether a goal is a leaf node, returning true if this is the case.\r\n * A leaf node is a goal with no children/subgoals.\r\n * \r\n * @param {Goal} goal \r\n */\r\nexport function isLeafNode(goal) {\r\n  return goal.subgoals.length === 0;\r\n}\r\n\r\n/**\r\n * Checks whether a goal is **explicitly** or **implicitly** complete: if a goal\r\n * is marked as complete by the user, it is explicitly complete. If a goal is\r\n * logically complete per the rules of implicit goal completeness, then it is\r\n * implicitly complete.\r\n * \r\n * A goal is explicitly complete if and only if a user has marked it as complete\r\n * AND the goal is a leaf node.\r\n * \r\n * A goal is implicitly complete if and only if ALL of its children are either\r\n * explicitly or implicitly complete.\r\n * \r\n * That is, leaf nodes may only be explicitly complete; inodes may only be\r\n * implicitly complete.\r\n * \r\n * @param {Goal} goal Goal to check completeness of\r\n */\r\nexport function isGoalCompleted(goal) {\r\n  return goal.completed === true || goal.completedImplicit === true;\r\n}\r\n\r\nexport function isDailyGoal(goal) {\r\n  return goal.daily !== false;\r\n}\r\n\r\nexport function isAllowedChildren(goal) {\r\n  return !isDailyGoal(goal);\r\n}\r\n\r\nexport function isActiveDailyGoal(goal) {\r\n  if (!isDailyGoal(goal) || goal.completed)\r\n    return false;\r\n\r\n  return true;\r\n}","import * as cloneDeep from 'lodash/cloneDeep';\r\nimport { findGoalById, flattenGoals } from '../logic/goalSelectors.js';\r\nimport { breadthFirstSearch } from '../logic/trees.js';\r\nimport { createSelector } from 'reselect';\r\nimport { TYPE_DEADLINE, TYPE_TARGET, TYPE_MANUAL } from '../logic/dailyGoals.js';\r\nimport { isActiveDailyGoal } from '../logic/goalProcessing.js';\r\n\r\n// Actions\r\nconst CREATE_GOAL = 'subgoals/goals/CREATE_GOAL';\r\nconst ADD_SUBGOAL = 'subgoals/goals/ADD_SUBGOAL';\r\nconst MOVE_SUBGOAL = 'subgoals/goals/MOVE_SUBGOAL';\r\nconst SET_GOAL_NAME = 'subgoals/goals/SET_GOAL_NAME';\r\nconst SET_GOAL_COLOR = 'subgoals/goals/SET_GOAL_COLOR';\r\nconst TOGGLE_GOAL_COMPLETE = 'subgoals/goals/TOGGLE_GOAL_COMPLETE';\r\nconst DELETE_GOAL = 'subgoals/goals/DELETE_GOAL';\r\nconst ADD_TO_DAILY = 'subgoals/goals/ADD_TO_DAILY';\r\nconst REMOVE_FROM_DAILY = 'subgoals/goals/REMOVE_FROM_DAILY';\r\nconst REMOVE_LATEST_FROM_DAILY = 'subgoals/goals/REMOVE_LATEST_FROM_DAILY';\r\nconst SET_DAILY_TYPE = 'subgoals/goals/SET_DAILY_TYPE';\r\nconst CONFIGURE_DAILY_TYPE = 'subgoals/goals/CONFIGURE_DAILY_TYPE';\r\nconst TOGGLE_GOAL_DAILY = 'subgoal/goals/TOGGLE_GOAL_DAILY';\r\n\r\n// Reducer\r\nconst INITIAL_STATE = {\r\n  goals: [\r\n    {\r\n      id: 0,\r\n      name: 'Welcome',\r\n      color: 'color-1',\r\n      subgoals: [\r\n        {\r\n          id: 1,\r\n          name: 'All items in this list are \\'subgoals\\'',\r\n          completed: false,\r\n          daily: false,\r\n          subgoals: []\r\n        },\r\n        {\r\n          id: 10,\r\n          name: 'Click on a subgoal to edit and view more information',\r\n          completed: false,\r\n          daily: false,\r\n          subgoals: []\r\n        },\r\n        {\r\n          id: 9,\r\n          name: 'Completing subgoals',\r\n          completed: false,\r\n          daily: false,\r\n          subgoals: [\r\n            {\r\n              id: 3,\r\n              name: 'Tap in the top-left of a subgoal to toggle whether it is completed',\r\n              completed: false,\r\n              daily: false,\r\n              subgoals: []\r\n            },\r\n            {\r\n              id: 4,\r\n              name: 'This is a completed subgoal',\r\n              completed: true,\r\n              daily: false,\r\n              subgoals: []\r\n            },\r\n            {\r\n              id: 5,\r\n              name: 'When all subgoals directly beneath another item are completed, the item is also considered completed',\r\n              completed: false,\r\n              daily: false,\r\n              subgoals: []\r\n            },\r\n            {\r\n              id: 6,\r\n              name: 'This subgoal has all its subgoals completed, and is therefore completed',\r\n              completed: false,\r\n              daily: false,\r\n              subgoals: [\r\n                {\r\n                  id: 7,\r\n                  name: 'Task 1',\r\n                  completed: true,\r\n                  daily: false,\r\n                  subgoals: []\r\n                },\r\n                {\r\n                  id: 8,\r\n                  name: 'Task 2',\r\n                  completed: true,\r\n                  daily: false,\r\n                  subgoals: []\r\n                }\r\n              ]\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: 11,\r\n          name: 'Daily goals',\r\n          completed: false,\r\n          daily: false,\r\n          subgoals: [\r\n            {\r\n              id: 12,\r\n              name: 'Daily goals are goals that you intend to complete daily (or every few days)',\r\n              completed: false,\r\n              daily: false,\r\n              subgoals: []\r\n            },\r\n            {\r\n              id: 13,\r\n              name: 'Click/tap on a daily goal to see its entire history and change settings',\r\n              completed: false,\r\n              daily: false,\r\n              subgoals: []\r\n            },\r\n            {\r\n              id: 14,\r\n              name: 'This is a daily goal',\r\n              completed: false,\r\n              daily: {\r\n                type: TYPE_MANUAL,\r\n                typeConfig: null,\r\n                history: []\r\n              },\r\n              subgoals: []\r\n            }\r\n          ]\r\n        },\r\n        {\r\n          id: 15,\r\n          name: 'You can delete this goal from the main page',\r\n          completed: false,\r\n          daily: false,\r\n          subgoals: []\r\n        }\r\n      ],\r\n      completed: false,\r\n      daily: false\r\n    }\r\n  ],\r\n  nextId: 6\r\n};\r\n\r\nfunction applyCreateGoal(state, action) {\r\n  const newState = cloneDeep(state);\r\n\r\n  newState.goals.push({\r\n    id: newState.nextId,\r\n    name: action.name,\r\n    subgoals: [],\r\n    completed: false,\r\n    daily: false\r\n  });\r\n  newState.nextId++;\r\n\r\n  return newState;\r\n}\r\n\r\nfunction applyAddSubgoal(state, action) {\r\n  const newState = cloneDeep(state);\r\n  const subgoal = findGoalById(newState.goals, action.goalId);\r\n\r\n  if (subgoal != null) {\r\n    subgoal.subgoals.push({\r\n      id: newState.nextId,\r\n      name: action.name,\r\n      subgoals: [],\r\n      completed: false,\r\n      daily: false,\r\n      points: 0\r\n    });\r\n    newState.nextId++;\r\n  }\r\n\r\n  // // Update the selected goal because it will reference an outdated\r\n  // // goal (i.e. one belonging to the old state, which has been deep copied)\r\n  // newState.selectedGoal = breadthFirstSearch(\r\n  //   { subgoals: newState.goals },\r\n  //   (goal) => newState.selectedGoalId === goal.id,\r\n  //   (goal) => goal.subgoals\r\n  // );\r\n\r\n  return newState;\r\n}\r\n\r\nfunction applyMoveSubgoal(state, action) {\r\n  if (!action.dst)\r\n    return state;\r\n\r\n  // Clone state so we don't mutate it or reuse refs\r\n  const newState = cloneDeep(state);\r\n\r\n  // Find the parents in question (we're moving an item from one parent to another)\r\n  const srcParent = findGoalById(newState.goals, action.src.parentId);\r\n  const dstParent = findGoalById(newState.goals, action.dst.parentId);\r\n\r\n  // Get the destination index: if it's NaN, that means we're at the last index\r\n  const dstIndex = isNaN(action.dst.index) ? dstParent.subgoals.length : action.dst.index;\r\n\r\n  // Find the goal we're moving, remove it from the source parent, and insert it into the\r\n  // destination parent at the desired position\r\n  const goal = srcParent.subgoals.splice(action.src.index, 1)[0];\r\n  dstParent.subgoals.splice(dstIndex, 0, goal);\r\n\r\n  return newState;\r\n}\r\n\r\nfunction applyDeleteGoal(state, action) {\r\n  const newState = cloneDeep(state);\r\n\r\n  // First check whether it is a simple case of deleting from top level\r\n  const index = newState.goals.findIndex(goal => goal.id === action.goalId);\r\n  if (index > -1) {\r\n    newState.goals.splice(index, 1);\r\n    return newState;\r\n  }\r\n\r\n  // Find the parent\r\n  const parent = breadthFirstSearch(\r\n    { subgoals: newState.goals },\r\n    goal => goal.subgoals.findIndex(sg => sg.id === action.goalId) !== -1,\r\n    goal => goal.subgoals\r\n  );\r\n\r\n  // If we couldn't find a parent, do nothing\r\n  if (!parent) {\r\n    return state;\r\n  }\r\n\r\n  // Get index of goal in parent\r\n  const goalIndex = parent.subgoals.findIndex(sg => sg.id === action.goalId);\r\n\r\n  // Remove from parent\r\n  parent.subgoals.splice(goalIndex, 1);\r\n\r\n  return newState;\r\n}\r\n\r\nfunction mutateGoal(state, goalId, callback) {\r\n  // Clone state and find goal object by given ID\r\n  const newState = cloneDeep(state);\r\n  const goal = findGoalById(newState.goals, goalId);\r\n\r\n  // Execute callback to update whatever property of the goal\r\n  callback(goal);\r\n\r\n  // Return new state, which contains the modified goal object\r\n  return newState;\r\n}\r\n\r\nexport default function reducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case CREATE_GOAL: return applyCreateGoal(state, action);\r\n    case ADD_SUBGOAL: return applyAddSubgoal(state, action);\r\n    case MOVE_SUBGOAL: return applyMoveSubgoal(state, action);\r\n    case SET_GOAL_NAME:\r\n      return mutateGoal(\r\n        state,\r\n        action.goalId,\r\n        goal => goal.name = action.name\r\n      );\r\n    case SET_GOAL_COLOR:\r\n      return mutateGoal(\r\n        state,\r\n        action.goalId,\r\n        goal => goal.color = action.color\r\n      );\r\n    case TOGGLE_GOAL_COMPLETE:\r\n      return mutateGoal(\r\n        state,\r\n        action.goalId,\r\n        goal => goal.completed = !goal.completed\r\n      );\r\n    case DELETE_GOAL: return applyDeleteGoal(state, action); \r\n    case ADD_TO_DAILY:\r\n      return mutateGoal(\r\n        state,\r\n        action.goalId,\r\n        goal => {\r\n          if (!goal.daily) {\r\n            return;\r\n          }\r\n\r\n          goal.daily.history.push(action.timestamp);\r\n        }\r\n      );\r\n    case REMOVE_FROM_DAILY:\r\n      return mutateGoal(\r\n        state,\r\n        action.goalId,\r\n        goal => {\r\n          // If goal is not daily, ignore action\r\n          if (!goal.daily) {\r\n            return;\r\n          }\r\n\r\n          // Find timestamp and remove if it exists\r\n          const index = goal.daily.history.indexOf(action.timestamp);\r\n          if (index > -1) {\r\n            goal.daily.history.splice(index, 1);\r\n          }\r\n        }\r\n      )\r\n    case REMOVE_LATEST_FROM_DAILY:\r\n      return mutateGoal(\r\n        state,\r\n        action.goalId,\r\n        goal => {\r\n          const target = new Date(action.timestamp);\r\n          const history = goal.daily.history\r\n            .map(timestamp => new Date(timestamp))\r\n            .filter(date => date.getFullYear() === target.getFullYear()\r\n              && date.getMonth() === target.getMonth()\r\n              && date.getDate() === target.getDate())\r\n            .sort((a, b) => {\r\n              if (a > b) return 1;\r\n              else if (a < b) return -1;\r\n              else return 0;\r\n            })\r\n            .reverse();\r\n          \r\n          // If we found a matching item in the history, remove the latest\r\n          // one (the 'history' array is in sorted order by desc time)\r\n          if (history.length > 0) {\r\n            const latestTimestamp = history[0].toISOString();\r\n            const index = goal.daily.history.indexOf(latestTimestamp);\r\n\r\n            if (index > -1) {\r\n              goal.daily.history.splice(index, 1);\r\n            } else {\r\n              console.warn('Inconsistency: could not find index of history timestamp');\r\n            }\r\n          }\r\n        }\r\n      );\r\n    case SET_DAILY_TYPE:\r\n      return mutateGoal(\r\n        state,\r\n        action.goalId,\r\n        goal => {\r\n          // Do nothing if we aren't changing type\r\n          if (goal.daily.type === action.newType) {\r\n            return goal;\r\n          }\r\n\r\n          // Set type\r\n          goal.daily.type = action.newType;\r\n\r\n          // Create default type config\r\n          switch (goal.daily.type) {\r\n            case TYPE_TARGET:\r\n              // Default target: 10 times\r\n              goal.daily.typeConfig = 10;\r\n              break;\r\n            case TYPE_DEADLINE:\r\n              // Default deadline: 1 week from now\r\n              const now = new Date();\r\n              now.setDate(now.getDate() + 7);\r\n              goal.daily.typeConfig = now.toISOString();\r\n              break;\r\n            default:\r\n              goal.daily.typeConfig = null;\r\n              break;\r\n          }\r\n        }\r\n      );\r\n    case CONFIGURE_DAILY_TYPE:\r\n      return mutateGoal(\r\n        state,\r\n        action.goalId,\r\n        goal => goal.daily.typeConfig = action.config\r\n      );\r\n    case TOGGLE_GOAL_DAILY:\r\n      return mutateGoal(\r\n        state,\r\n        action.goalId,\r\n        goal => {\r\n          if (goal.daily) {\r\n            goal.daily = false;\r\n          } else {\r\n            goal.daily = {\r\n              type: TYPE_MANUAL,\r\n              typeConfig: null,\r\n              history: []\r\n            }\r\n          }\r\n        }\r\n      )\r\n    default: return state;\r\n  }\r\n}\r\n\r\n// Action creators\r\n/**\r\n * Creates a new goal (i.e. NOT subgoal), initialized with default settings\r\n * @param {string} name Name of goal to create\r\n */\r\nexport function createGoal(name) {\r\n  return {\r\n    type: CREATE_GOAL,\r\n    name: name\r\n  };\r\n}\r\n\r\n/**\r\n * Creates a new subgoal and adds it to a (selected) goal. This will be\r\n * a top-level subgoal (i.e. not nested).\r\n * \r\n * @param {string} name Name of subgoal\r\n * @param {number} goalId ID of goal to add subgoal to\r\n */\r\nexport function addSubgoal(name, goalId) {\r\n  return {\r\n    type: ADD_SUBGOAL,\r\n    name: name,\r\n    goalId: goalId\r\n  };\r\n}\r\n\r\n/**\r\n * Moves a subgoal from one position to another in the selected goal.\r\n * \r\n * @param {{parentId: number, index: number}} src Subgoal position before move\r\n * @param {{parentId: number, index: number}} dst Subgoal position after move\r\n */\r\nexport function moveSubgoal(src, dst) {\r\n  return {\r\n    type: MOVE_SUBGOAL,\r\n    src: src,\r\n    dst: dst\r\n  };\r\n}\r\n\r\n// TODO: change to setGoalTitle/setGoalName\r\n/**\r\n * Sets a (sub?)goal's name\r\n * \r\n * @param {number} goalId ID of goal for which to change name\r\n * @param {string} name New goal name\r\n */\r\nexport function setGoalName(goalId, name) {\r\n  return {\r\n    type: SET_GOAL_NAME,\r\n    goalId: goalId,\r\n    name: name\r\n  }\r\n}\r\n\r\n/**\r\n * Sets a goal's color explicitly (i.e. overrides generated color)\r\n * \r\n * @param {number} goalId ID of goal\r\n * @param {string} color New color\r\n */\r\nexport function setGoalColor(goalId, color) {\r\n  return {\r\n    type: SET_GOAL_COLOR,\r\n    goalId: goalId,\r\n    color: color\r\n  }\r\n}\r\n\r\n/**\r\n * Toggles whether or not a goal is complete\r\n * @param {number} goalId ID of goal to toggle completeness of\r\n */\r\nexport function toggleGoalComplete(goalId) {\r\n  return {\r\n    type: TOGGLE_GOAL_COMPLETE,\r\n    goalId: goalId\r\n  };\r\n}\r\n\r\n/**\r\n * Deletes a goal entirely\r\n * @param {number} goalId ID of goal to delete\r\n */\r\nexport function deleteGoal(goalId) {\r\n  return {\r\n    type: DELETE_GOAL,\r\n    goalId: goalId\r\n  };\r\n}\r\n\r\n/**\r\n * Adds a 'completion' of a daily goal to its history, i.e. marks a particular\r\n * date/time as completed on this date/time.\r\n * \r\n * @param {number} goalId ID of goal\r\n * @param {string} timestamp ISO8601 timestamp of when the daily goal was done\r\n */\r\nexport function addToDaily(goalId, timestamp) {\r\n  return {\r\n    type: ADD_TO_DAILY,\r\n    goalId: goalId,\r\n    timestamp: timestamp\r\n  };\r\n}\r\n\r\n/**\r\n * Removes a 'completion' of a daily goal from its history.\r\n * \r\n * @param {number} goalId ID of goal\r\n * @param {string} timestamp ISO8601 timestamp of completion to delete\r\n */\r\nexport function removeFromDaily(goalId, timestamp) {\r\n  return {\r\n    type: REMOVE_FROM_DAILY,\r\n    goalId: goalId,\r\n    timestamp: timestamp\r\n  }\r\n}\r\n\r\n/**\r\n * Removes the latest (i.e. last one in a given day/month/year) 'completion'\r\n * of a daily goal from its history.\r\n * \r\n * The timestamp need not have a time different to 00:00; it is disregarded\r\n * entirely.\r\n * \r\n * @param {number} goalId ID of goal\r\n * @param {string} timestamp ISO8601 timestamp; time is ignored, as the\r\n *                           the latest time from the day of the timestamp used\r\n */\r\nexport function removeLatestFromDaily(goalId, timestamp) {\r\n  return {\r\n    type: REMOVE_LATEST_FROM_DAILY,\r\n    goalId: goalId,\r\n    timestamp: timestamp\r\n  }\r\n}\r\n\r\n/**\r\n * Sets the type of a daily goal. Any properties from the previous type of\r\n * the goal will be discarded, and the new properties shall be initialized\r\n * with default values.\r\n * \r\n * @param {number} goalId ID of goal to change\r\n * @param {string} newType New daily goal type; see `logic/dailyGoals.js`\r\n */\r\nexport function setDailyType(goalId, newType) {\r\n  return {\r\n    type: SET_DAILY_TYPE,\r\n    goalId: goalId,\r\n    newType: newType\r\n  }\r\n}\r\n\r\n/**\r\n * Sets the parameters for a daily goal's type. For instance, a target type\r\n * requires a configuration of the number (i.e. the target itself).\r\n * \r\n * @param {number} goalId ID of goal to change\r\n * @param {any} config New configuration value for goal; can be any type\r\n */\r\nexport function configureDailyType(goalId, config) {\r\n  return {\r\n    type: CONFIGURE_DAILY_TYPE,\r\n    goalId: goalId,\r\n    config: config\r\n  }\r\n}\r\n\r\n/**\r\n * Toggles whether or not a goal is a daily goal.\r\n * If the goal is daily, this will erase all associated daily data.\r\n * If the goal is not daily, this will initialize the goal with empty history and\r\n * a daily type of manual.\r\n * \r\n * @param {number} goalId ID of goal\r\n */\r\nexport function toggleGoalDaily(goalId) {\r\n  return {\r\n    type: TOGGLE_GOAL_DAILY,\r\n    goalId: goalId\r\n  }\r\n}\r\n\r\n// Selectors\r\nexport const getGoalsWithCompleteness = createSelector(\r\n  [state => state.goals.goals],\r\n  (goals) => {\r\n    const newGoals = cloneDeep(goals);\r\n    const markCompletedImplicit = (goal) => {\r\n      // If there are children, we must go through them all and determine\r\n      // whether they are completed. If they are all completed (either explicit\r\n      // or implicit), we can mark this parent as implicitly completed.\r\n      if (goal.subgoals.length > 0) {\r\n        // Set the completed property to false, as we are not a leaf and so it\r\n        // does not apply\r\n        goal.completed = false;\r\n\r\n        // Recursively check whether all subgoals are complete\r\n        let allSubgoalsCompleted = true;\r\n        for (let subgoal of goal.subgoals) {\r\n          if (!markCompletedImplicit(subgoal)) {\r\n            allSubgoalsCompleted = false;\r\n          }\r\n        }\r\n\r\n        // If all subgoals are completed (and they will now have been marked\r\n        // recursively as implicitly complete where appropriate), then we are\r\n        // implicitly completed and should add this property. Otherwise, return\r\n        // false.\r\n        if (allSubgoalsCompleted) {\r\n          goal.completedImplicit = true;\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      } else {\r\n        return goal.completed;\r\n      }\r\n    }\r\n\r\n    // Go through each root goal and carry out the implicit completeness marking\r\n    for (let goal of newGoals) {\r\n      markCompletedImplicit(goal);\r\n    }\r\n\r\n    // Return this new list of goals, which is a clone of the old list, with all\r\n    // goals that are implicitly complete (i.e. all children either leaves that \r\n    // are completed, or inodes that are implicilty complete) containing a new\r\n    // property, 'completedImplicit', which is set to true.\r\n    // All goals that have children have completed set to false, since they\r\n    // cannot be explicitly completed.\r\n    return newGoals;\r\n  }\r\n)\r\n\r\nexport const getActiveDailyGoals = createSelector(\r\n  [state => state.goals.goals],\r\n  (goals) => {\r\n    return flattenGoals(goals).filter(\r\n      goal => isActiveDailyGoal(goal)\r\n    )\r\n  }\r\n)","// Actions\r\nconst SET_SELECTED_GOAL = 'subgoals/page/SET_SELECTED_GOAL';\r\nconst GO_BACK = 'subgoals/page/GO_BACK';\r\n\r\n// Reducer\r\nconst INITIAL_STATE = {\r\n  selectedGoalId: null,\r\n  history: []\r\n};\r\n\r\nexport default function reducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case SET_SELECTED_GOAL:\r\n      return {\r\n        ...state,\r\n        selectedGoalId: action.goalId,\r\n        history: [...state.history, state.selectedGoalId]\r\n      };\r\n\r\n    case GO_BACK:\r\n      return {\r\n        ...state,\r\n        selectedGoalId: state.history.pop()\r\n      }\r\n    default: return state;\r\n  }\r\n}\r\n\r\n// Action creators\r\n\r\n/**\r\n * Sets the selected goal. This will be displayed in a Goal Page,\r\n * allowing the user to see its subgoals, title, etc.\r\n * \r\n * If the given ID is null, the user will be returned to the listing\r\n * of all goals (i.e. Main Page).\r\n * \r\n * @param {number | null} goalId ID of the goal to select\r\n */\r\nexport function setSelectedGoal(goalId) {\r\n  return {\r\n    type: SET_SELECTED_GOAL,\r\n    goalId: goalId\r\n  };\r\n}\r\n\r\n/**\r\n * Navigates back in the navigation hierarchy.\r\n */\r\nexport function goBack() {\r\n  return {\r\n    type: GO_BACK\r\n  };\r\n}","import React, { Component } from 'react';\r\nimport { calculateGoalProgress, getGoalColor } from '../../logic/goalProcessing.js';\r\nimport './GoalList.scss';\r\n\r\nclass GoalList extends Component {\r\n\r\n  render() {\r\n    const onGoalClick = this.props.onGoalClick;\r\n    const goalList = this.props.goals.map((goal) =>\r\n      <GoalListItem\r\n        goal={goal}\r\n        key={goal.id}\r\n        onGoalClick={onGoalClick}\r\n        onChangeGoalColor={this.props.onChangeGoalColor}\r\n        onChangeGoalName={this.props.onChangeGoalName}\r\n        onDeleteGoal={this.props.onDeleteGoal}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <ul className=\"goal-list\">\r\n        {goalList}\r\n        <li\r\n          key=\"dummy\"\r\n          onClick={this.props.onNewGoal}\r\n          className=\"goal-list__item dummy\"\r\n        >\r\n          <h3><i className=\"fas fa-plus\"></i> Create new goal</h3>\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n  \r\n}\r\n\r\nconst GoalListItem = ({ goal, onGoalClick, onChangeGoalName, onChangeGoalColor, onDeleteGoal }) =>\r\n  <li\r\n    key={goal.id}\r\n    onClick={() => onGoalClick(goal)}\r\n    className={`goal-list__item bg-${goal.color || getGoalColor(goal)}`}\r\n  >\r\n    <h3>{goal.name}</h3>\r\n    <span>{Math.floor(calculateGoalProgress(goal) * 100)}%</span>\r\n    <div className=\"button-group\">\r\n      <button onClick={(e) => {e.stopPropagation(); onChangeGoalName(goal)}}>\r\n        <i className=\"fas fa-pen\"></i>\r\n      </button>\r\n      <button onClick={(e) => {e.stopPropagation(); onChangeGoalColor(goal)}}>\r\n        <i className=\"fas fa-palette\"></i>\r\n      </button>\r\n      <button onClick={(e) => {e.stopPropagation(); onDeleteGoal(goal)}}>\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  </li>;\r\n      \r\nexport default GoalList;","// Actions\r\nconst OPEN_INFO_DIALOG = 'subgoals/dialog/OPEN_INFO_DIALOG';\r\nconst OPEN_CONFIRM_DIALOG = 'subgoals/dialog/OPEN_CONFIRM_DIALOG';\r\nconst OPEN_INPUT_DIALOG = 'subgoals/dialog/OPEN_INPUT_DIALOG';\r\nconst OPEN_COLORPICKER_DIALOG = 'subgoals/dialog/OPEN_COLORPICKER_DIALOG';\r\nconst CLOSE_DIALOG = 'subgoals/dialog/CLOSE_DIALOG';\r\n\r\n// Constants\r\nexport const DIALOG_TYPE_INFO = 'info';\r\nexport const DIALOG_TYPE_INPUT = 'input';\r\nexport const DIALOG_TYPE_COLORPICKER = 'colorpicker';\r\nexport const DIALOG_TYPE_CONFIRM = 'confirm';\r\n\r\n// Reducer\r\nconst INITIAL_STATE = {\r\n  type: null,\r\n  message: null,\r\n  isOpen: false,\r\n\r\n  onAccept: null,\r\n  onReject: null\r\n};\r\n\r\nexport default function reducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case OPEN_INFO_DIALOG:\r\n      return {\r\n        ...state,\r\n        type: DIALOG_TYPE_INFO,\r\n        isOpen: true,\r\n        message: action.message\r\n      };\r\n    case OPEN_CONFIRM_DIALOG:\r\n      return {\r\n        ...state,\r\n        type: DIALOG_TYPE_CONFIRM,\r\n        isOpen: true,\r\n        message: action.message,\r\n        onAccept: action.onAccept,\r\n        onReject: action.onReject\r\n      };\r\n    case OPEN_INPUT_DIALOG:\r\n      return {\r\n        ...state,\r\n        type: DIALOG_TYPE_INPUT,\r\n        isOpen: true,\r\n        message: action.message,\r\n        onAccept: action.onAccept,\r\n        onReject: action.onReject,\r\n        value: action.value\r\n      };\r\n    case OPEN_COLORPICKER_DIALOG:\r\n      return {\r\n        ...state,\r\n        type: DIALOG_TYPE_COLORPICKER,\r\n        isOpen: true,\r\n        message: action.message,\r\n        onAccept: action.onAccept,\r\n        onReject: action.onReject,\r\n        value: action.value\r\n      }\r\n    case CLOSE_DIALOG:\r\n      return {\r\n        ...state,\r\n        isOpen: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Action creators\r\n\r\n/**\r\n * Opens an informational dialog box, displaying the given message\r\n * @param {string} message Message to display in info dialog\r\n */\r\nexport function openInfoDialog(message) {\r\n  return {\r\n    type: OPEN_INFO_DIALOG,\r\n    message: message\r\n  };\r\n}\r\n\r\n/**\r\n * Opens a confirmation dialog\r\n * @param {string} message Message to display in confirm dialog\r\n * @param {function} onAccept Callback to be invoked if user accepts (clicks OK)\r\n * @param {function} onReject Callback to be invoked if user rejects (clicks Cancel)\r\n */\r\nexport function openConfirmDialog(message, onAccept, onReject) {\r\n  return {\r\n    type: OPEN_CONFIRM_DIALOG,\r\n    message,\r\n    onAccept,\r\n    onReject\r\n  };\r\n}\r\n\r\nexport function openInputDialog(message, onAccept, onReject, value = '') {\r\n  return {\r\n    type: OPEN_INPUT_DIALOG,\r\n    message,\r\n    onAccept,\r\n    onReject,\r\n    value\r\n  };\r\n}\r\n\r\n/**\r\n * Opens a colorpicker dialog, allowing a user to choose from 32 hues (named\r\n * color-0 through color-31).\r\n * \r\n * @param {string} message \r\n * @param {function} onAccept \r\n * @param {function} onReject\r\n * @param {string} value \r\n */\r\nexport function openColorpickerDialog(message, onAccept, onReject, value = 'color-0') {\r\n  return {\r\n    type: OPEN_COLORPICKER_DIALOG,\r\n    message,\r\n    onAccept,\r\n    onReject,\r\n    value\r\n  }\r\n}\r\n\r\n/**\r\n * Closes any open dialog\r\n */\r\nexport function closeDialog() {\r\n  return {\r\n    type: CLOSE_DIALOG\r\n  };\r\n}","import { connect } from 'react-redux';\r\n\r\nimport { getGoalsWithCompleteness, createGoal, deleteGoal, setGoalName, setGoalColor } from '../ducks/goals.js';\r\nimport { setSelectedGoal } from '../ducks/page.js';\r\nimport GoalList from '../components/page-main/GoalList.js';\r\nimport { openInputDialog, openConfirmDialog, openColorpickerDialog } from '../ducks/dialog.js';\r\nimport { getGoalColor } from '../logic/goalProcessing.js';\r\n\r\nfunction onNewGoal(dispatch) {\r\n  dispatch(openInputDialog(\r\n    'Enter goal name',\r\n    (name) => {\r\n      dispatch(createGoal(name));\r\n    },\r\n    () => {}\r\n  ));\r\n}\r\n\r\nfunction onChangeGoalName(dispatch, goal) {\r\n  const goalId = goal.id;\r\n  dispatch(openInputDialog(\r\n    'Enter goal name',\r\n    (name) => {\r\n      dispatch(setGoalName(goalId, name))\r\n    },\r\n    () => {},\r\n    goal.name\r\n  ))\r\n}\r\n\r\nfunction onChangeGoalColor(dispatch, goal) {\r\n  const goalId = goal.id;\r\n  dispatch(openColorpickerDialog(\r\n    'Choose colour',\r\n    (color) => {\r\n      dispatch(setGoalColor(goalId, color));\r\n    },\r\n    () => {},\r\n    getGoalColor(goal)\r\n  ))\r\n}\r\n\r\nfunction onDeleteGoal(dispatch, goal) {\r\n  // TODO: make DRYer; duplicated in EditSubgoalModalContainer.\r\n  const goalId = goal.id;\r\n  dispatch(\r\n    openConfirmDialog(\r\n      'Are you sure you want to delete this goal? This action cannot be undone',\r\n      () => { dispatch(deleteGoal(goalId)); },\r\n      () => {}\r\n    )\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  goals: getGoalsWithCompleteness(state)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onGoalClick: (goal) => dispatch(setSelectedGoal(goal.id)),\r\n  onNewGoal: () => onNewGoal(dispatch),\r\n  onChangeGoalName: (goal) => onChangeGoalName(dispatch, goal),\r\n  onChangeGoalColor: (goal) => onChangeGoalColor(dispatch, goal),\r\n  onDeleteGoal: (goal) => onDeleteGoal(dispatch, goal)\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(GoalList);","import React, { Component } from 'react';\r\n\r\nimport './DailyGoalList.scss';\r\n\r\nclass DailyGoalList extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      days: []\r\n    };\r\n\r\n    let currentDate = new Date(); // Start at today\r\n    for (let i = 0; i < 7; i++) {\r\n      this.state.days.push(new Date(currentDate));\r\n      currentDate.setDate(currentDate.getDate() - 1);\r\n    }\r\n  }\r\n\r\n  formatDate(date) {\r\n    return date.toLocaleString('default', { month: '2-digit', day: '2-digit' });\r\n  }\r\n\r\n  isSameDay(date1, date2) {\r\n    return date1.getFullYear() === date2.getFullYear()\r\n      && date1.getMonth() === date2.getMonth()\r\n      && date1.getDate() === date2.getDate();\r\n  }\r\n\r\n  isToday(date) {\r\n    const now = new Date();\r\n    return this.isSameDay(now, date);\r\n  }\r\n\r\n  getDayCounts() {\r\n    let counts = {};\r\n\r\n    const historyDates = this.props.goals.map(\r\n      goal => goal.daily.history.map(\r\n        dateString => new Date(dateString)\r\n      )\r\n    );\r\n\r\n    for (let i = 0; i < this.props.goals.length; i++) {\r\n      const goalId = this.props.goals[i].id;\r\n\r\n      // Initialize counts for this goal\r\n      counts[goalId] = {};\r\n\r\n      // Examine each date in the history of this goal\r\n      for (let historyDate of historyDates[i]) {\r\n        // Attempt to find a date that's the same in ours\r\n        const ourDate = this.state.days.find(\r\n          other => this.isSameDay(other, historyDate)\r\n        );\r\n\r\n        // If this date is included in our days, then add to its count\r\n        if (ourDate) {\r\n          counts[goalId][ourDate] = (counts[goalId][ourDate] || 0) + 1;\r\n        }\r\n      }\r\n    }\r\n\r\n    return counts;\r\n  }\r\n\r\n  render() {\r\n    if (this.props.goals.length === 0) {\r\n      return <em>You have no uncompleted daily goals</em>;\r\n    }\r\n\r\n    // We use reversed days, because the scroll container for the checkboxes\r\n    // is RTL, so that it starts scrolled at the right-hand side.\r\n    const reversedDays = this.state.days;//.slice().reverse();\r\n    const counts = this.getDayCounts();\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"daily-goal-list\">\r\n          <div className=\"daily-goal-list__left\">\r\n            {/* Include space where the header row will be in the right section */}\r\n            <span className=\"spacer\"></span>\r\n\r\n            {/* Labels for each row */}\r\n            {this.props.goals.map(goal => (\r\n              <label key={goal.id}>{goal.name}</label>\r\n            ))}\r\n          </div>\r\n          <div className=\"daily-goal-list__right\">\r\n            {/* Include formatted dates for each day */}\r\n            <span className=\"spacer\">\r\n              {reversedDays.map(date => (\r\n                <span key={date} className=\"day-label\">\r\n                  <label>{this.formatDate(date)}</label>\r\n                </span>\r\n              ))}\r\n            </span>\r\n            {/* Create a row for each goal */}\r\n            {this.props.goals.map(goal => (\r\n              <div className=\"row\" key={goal.id}>\r\n                {/* Add a corresponding button column for each day */}\r\n                {reversedDays.map(date => (\r\n                  <button\r\n                    key={date + '-' + goal.id}\r\n                    className={\r\n                      (this.isToday(date) ? 'today' : '')\r\n                      + (counts[goal.id][date] ? ' completed' : '')\r\n                    }\r\n                    onClick={() => this.props.onMarkDay(goal, date)}\r\n                    onContextMenu={(e) => {e.preventDefault(); this.props.onUnmarkDay(goal, date)}}\r\n                  >\r\n                    {/* If no count exists, it is 0, and we show empty text */}\r\n                    {/* If count is 1, show a check */}\r\n                    {/* If count > 1, show the count */}\r\n                    {!counts[goal.id][date]\r\n                    ? <span>&nbsp;</span>\r\n                    : (counts[goal.id][date] > 1\r\n                      ? (<span>{counts[goal.id][date]}</span>)\r\n                      : (<i className=\"fas fa-check\"></i>))}\r\n                  </button>\r\n                ))}\r\n              </div>\r\n            ))}\r\n            \r\n          </div>\r\n        </div>\r\n        {/* <table\r\n          className=\"daily-goal-list\"\r\n          cellPadding=\"0\"\r\n          cellSpacing=\"0\"\r\n          border=\"0\"\r\n        >\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              {this.state.days.map(date => (\r\n                <th><span>{this.formatDate(date)}</span></th>\r\n              ))}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.goals.map(goal => (\r\n              <tr key={goal.id}>\r\n                <td>\r\n                  <span>{goal.name}</span>\r\n                </td>\r\n                {this.state.days.map(date => (\r\n                  <td\r\n                    key={date}\r\n                    className={this.isToday(date) ? 'today' : ''}\r\n                  >\r\n                    <button>\r\n                      <i className=\"fas fa-check\"></i>\r\n                    </button>\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table> */}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default DailyGoalList;","import { connect } from 'react-redux';\r\nimport DailyGoalList from '../components/page-main/DailyGoalList.js';\r\nimport { getActiveDailyGoals, addToDaily, removeLatestFromDaily } from '../ducks/goals.js';\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    goals: getActiveDailyGoals(state)\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onMarkDay: (subgoal, date) => dispatch(addToDaily(subgoal.id, date.toISOString())),\r\n    onUnmarkDay: (subgoal, date) => dispatch(removeLatestFromDaily(subgoal.id, date.toISOString()))\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(DailyGoalList);","import React from 'react';\r\n\r\nimport InteractiveGoalList from '../../containers/InteractiveGoalList.js';\r\nimport InteractiveDailyGoalList from '../../containers/InteractiveDailyGoalList.js';\r\n\r\nconst PageMain = ({ goals, setSelectedGoal }) =>\r\n  <div>\r\n    <h2>Daily Goals</h2>\r\n    <InteractiveDailyGoalList />\r\n    <h2>Goals</h2>\r\n    <InteractiveGoalList />\r\n  </div>;\r\n\r\nexport default PageMain;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './OverflowMenu.scss';\r\n\r\n// Root element for menus\r\nconst menuRoot = document.getElementById('menu-root');\r\n\r\nclass OverflowMenu extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.el = document.createElement('div');\r\n    this.renderMenu = this.renderMenu.bind(this);\r\n    this.handleBlur = this.handleBlur.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Add element to menu root; we will render into this using a portal\r\n    menuRoot.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // Remove element from menu root\r\n    menuRoot.removeChild(this.el);\r\n  }\r\n\r\n  handleBlur(e) {\r\n    if (this.menuRef) {\r\n      // Determine whether or not we \r\n      let elem = e.relatedTarget;\r\n      let insideMenu = false;\r\n\r\n      // Climb element tree until we reach a node equal to our \r\n      // menu element, or until we've reached the top of the tree\r\n      while (elem && elem.parentNode) {\r\n        elem = elem.parentNode;\r\n        if (elem === this.menuRef) {\r\n          insideMenu = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      // If we're NOT inside the menu element (i.e. we're not\r\n      // blurring as a result of clicking a button), then close\r\n      // the menu\r\n      if (!insideMenu) {\r\n        this.props.onCloseMenu();\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(\r\n      this.renderMenu(),\r\n      this.el\r\n    );\r\n  }\r\n\r\n  renderMenu() {\r\n    // Don't render anything if we aren't visible or if we aren't\r\n    // anchored to anything\r\n    if (!this.props.visible\r\n      || !this.props.anchorRef.current) {\r\n      return null;\r\n    }\r\n\r\n    // Get position of element to which to anchor the menu\r\n    const pos = this.props.anchorRef.current.getBoundingClientRect();\r\n    let style;\r\n    if (window.innerWidth < 1100) { // TODO: standardize this constant\r\n      const right = window.innerWidth - pos.right;\r\n      style = {\r\n        top: `${pos.top}px`,\r\n        right: `${right}px`\r\n      };\r\n    } else {\r\n      style = {\r\n        top: `${pos.top}px`,\r\n        left: `${pos.left}px`\r\n      }\r\n    }\r\n    \r\n    // Utility function for closing menu when onClick() returns true\r\n    const createClickHandler = (onClick) => {\r\n      return () => {\r\n        if (onClick()) {\r\n          this.props.onCloseMenu();\r\n        }\r\n      }\r\n    };\r\n\r\n    return (\r\n      this.props.visible &&\r\n      <div \r\n        className={`overflow-menu ${this.props.visible ? 'visible' : ''}`}\r\n        style={style}\r\n        tabIndex=\"-1\"\r\n        ref={(ref) => {ref && ref.focus(); this.menuRef = ref}}\r\n        onBlur={this.handleBlur}\r\n      >\r\n        <ul>\r\n          {this.props.items.map((item) =>\r\n          <li key={item.text}>\r\n            <button onClick={createClickHandler(item.onClick)}>\r\n              {item.text}\r\n            </button>\r\n          </li>\r\n          )}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default OverflowMenu;","import React, { Component } from 'react';\r\n\r\nimport './DailyGoalHistory.scss';\r\n\r\nclass DailyGoalHistory extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.getCount = this.getCount.bind(this);\r\n    this.handleChangeMonth = this.handleChangeMonth.bind(this);\r\n\r\n    const now = new Date();\r\n    this.state = {\r\n      year: now.getFullYear(),\r\n      month: now.getMonth()\r\n    };\r\n  }\r\n\r\n  getCount(date) {\r\n    return this.props.data.history.map(\r\n      dateString => new Date(dateString)\r\n    ).filter(\r\n      otherDate => otherDate.getFullYear() === date.getFullYear()\r\n        && otherDate.getMonth() === date.getMonth()\r\n        && otherDate.getDate() === date.getDate()\r\n    ).length;\r\n  }\r\n\r\n  getCountClass(count, maxCount) {\r\n    if (maxCount === 0) {\r\n      return 'count-0';\r\n    } else if (maxCount === 1) {\r\n      // This looks slightly better if we only ever have one thing\r\n      // (and also transitions well into when max count = 2, since ones that\r\n      // were 1 before remain the same class)\r\n      return count === 0 ? 'count-0' : 'count-6';\r\n    } else {\r\n      let num = Math.round(count / maxCount * 12);\r\n      return `count-${num}`;\r\n    }\r\n  }\r\n\r\n  generateRows(year, month) {\r\n    let maxCount = 0;\r\n    let rows = [];\r\n    let row = [];\r\n    let date = new Date(year, month);\r\n    date.setDate(1);\r\n\r\n    // Calculate the number of days before so we start on a Monday\r\n    let daysBefore = (date.getDay() - 1) % 7;\r\n    if (daysBefore < 0)\r\n      daysBefore += 7;\r\n    date.setDate(date.getDate() - daysBefore);\r\n\r\n    for (let i = 0; i < 7 * 6; i++) {\r\n      const count = this.getCount(date);\r\n\r\n      // Add the day to the row\r\n      row.push({\r\n        date: new Date(date),\r\n        count,\r\n        isSelectedMonth: date.getMonth() === month\r\n      });\r\n\r\n      // Set max count if we have encountered a greater count\r\n      if (count > maxCount) {\r\n        maxCount = count;\r\n      }\r\n\r\n      // Push row if we fill it\r\n      if (row.length === 7) {\r\n        rows.push(row);\r\n        row = [];\r\n      }\r\n\r\n      // Add one day\r\n      date.setDate(date.getDate() + 1);\r\n    }\r\n\r\n    return {\r\n      rows,\r\n      maxCount\r\n    };\r\n  }\r\n\r\n  getMonthString(year, month) {\r\n    const date = new Date(year, month);\r\n\r\n    // Get month string -- i.e. month & year\r\n    return date.toLocaleString('default', { month: 'long', year: 'numeric' });\r\n  }\r\n\r\n  handleChangeMonth(amount) {\r\n    let currentDate = new Date(this.state.year, this.state.month);\r\n    currentDate.setMonth(currentDate.getMonth() + amount);\r\n\r\n    this.setState({\r\n      ...this.state,\r\n      year: currentDate.getFullYear(),\r\n      month: currentDate.getMonth()\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { rows, maxCount } = this.generateRows(this.state.year, this.state.month);\r\n    const monthString = this.getMonthString(this.state.year, this.state.month);\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"month-select\">\r\n          <button onClick={() => this.handleChangeMonth(-1)}>\r\n            <i className=\"fas fa-angle-left\"></i>\r\n          </button>\r\n          <span>{monthString}</span>\r\n          <button onClick={() => this.handleChangeMonth(+1)}>\r\n            <i className=\"fas fa-angle-right\"></i>\r\n          </button>\r\n        </div>\r\n        <table className=\"daily-month\">\r\n          <thead>\r\n            <tr>\r\n              <th>Mo</th>\r\n              <th>Tu</th>\r\n              <th>We</th>\r\n              <th>Th</th>\r\n              <th>Fr</th>\r\n              <th>Sa</th>\r\n              <th>Su</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {rows.map((row, i) => (\r\n              <tr key={`row-${i}`}>\r\n                {row.map(item => (\r\n                  <td\r\n                    key={item.date}\r\n                    className={\r\n                      this.getCountClass(item.count, maxCount)\r\n                      + (item.isSelectedMonth ? '' : ' disabled')\r\n                    }\r\n                    onClick={() => this.props.onMarkDay(item.date)}\r\n                    onContextMenu={(e) => { e.preventDefault(); this.props.onUnmarkDay(item.date); }}\r\n                  >\r\n                    {item.date.getDate()}\r\n                  </td>\r\n                ))}\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DailyGoalHistory;","import React, { Component } from 'react';\r\nimport ContentEditable from 'react-contenteditable';\r\nimport 'date-input-polyfill-react';\r\n\r\nimport { isLeafNode, isGoalCompleted, isDailyGoal } from '../../logic/goalProcessing.js';\r\nimport { TYPE_DEADLINE, TYPE_MANUAL, TYPE_TARGET } from '../../logic/dailyGoals.js';\r\nimport './EditSubgoalModal.scss';\r\nimport DailyGoalHistory from './DailyGoalHistory.js';\r\n\r\nclass EditSubgoalModal extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleInputTitle = this.handleInputTitle.bind(this);\r\n    this.handleViewChildren = this.handleViewChildren.bind(this);\r\n    this.titleRef = React.createRef();\r\n  }\r\n\r\n  handlePasteAsPlainText(event) {\r\n    event.preventDefault();\r\n\r\n    const text = event.clipboardData.getData('text/plain');\r\n    document.execCommand('insertHTML', false, text);\r\n  }\r\n\r\n  handleInputTitle(event) {\r\n    let newTitle = this.titleRef.current.textContent;\r\n\r\n    // Don't trigger change if we haven't changed!\r\n    if (newTitle === this.props.subgoal.name) {\r\n      return;\r\n    }\r\n\r\n    this.props.onChangeTitle(this.props.subgoal, newTitle);\r\n  }\r\n\r\n  handleViewChildren() {\r\n    this.props.onRequestClose();\r\n    this.props.onViewChildren(this.props.subgoal);\r\n  }\r\n\r\n  renderProgress() {\r\n    const subgoal = this.props.subgoal;\r\n\r\n    // If the subgoal has children, it cannot be 'complete' in an explicit sense,\r\n    // so we tell the user how far it is to becoming 'implicitly complete', by\r\n    // showing them the number of direct children that are 'complete'.\r\n    if (!isLeafNode(subgoal)) {\r\n      const completedChildren = subgoal.subgoals\r\n        .filter(goal => isGoalCompleted(goal))\r\n        .length;\r\n      const totalChildren = subgoal.subgoals.length;\r\n\r\n      return (\r\n        <p>{completedChildren} / {totalChildren} subgoals completed</p>\r\n      );\r\n    // Otherwise, we show a simple check/cross to indicate whether it is complete\r\n    // explicitly.\r\n    } else {\r\n      return (\r\n        <p>\r\n          <i className={`progress-indicator fas fa-${subgoal.completed ? 'check' : 'times'}`}></i>\r\n          {subgoal.completed ? 'Completed' : 'Incomplete' }\r\n        </p>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderDaily() {\r\n    const subgoal = this.props.subgoal;\r\n\r\n    return (\r\n      <>\r\n        <h4>Daily</h4>\r\n        <div className=\"daily-controls\">\r\n          {this.renderDailyControls()}\r\n        </div>\r\n        <DailyGoalHistory\r\n          data={subgoal.daily}\r\n          onMarkDay={this.props.onMarkDay.bind(null, subgoal)}\r\n          onUnmarkDay={this.props.onUnmarkDay.bind(null, subgoal)}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderDailyControls() {\r\n    const subgoal = this.props.subgoal;\r\n    const daily = subgoal.daily;\r\n\r\n    // Render different controls based on the type of daily goal.\r\n    // E.g. manual goals don't require any kind of inputs\r\n    let controls;\r\n    switch (daily.type) {\r\n      case TYPE_MANUAL:\r\n        const completions = daily.history.length;\r\n        controls = (\r\n          <>\r\n            <label>Progress</label>\r\n            <span><b className=\"boxed-text\">{completions}</b> completions</span>\r\n          </>\r\n        )\r\n        break;\r\n      case TYPE_TARGET:\r\n        const progress = daily.history.length / (daily.typeConfig || 1) * 100;\r\n        controls = (\r\n          <>\r\n            <label htmlFor=\"target\">Target</label>\r\n            <span>\r\n              <input\r\n                type=\"number\"\r\n                name=\"target\"\r\n                min=\"1\"\r\n                value={daily.typeConfig}\r\n                onChange={(e) => this.props.onConfigureDailyType(subgoal, parseInt(e.target.value))}\r\n              />\r\n            </span>\r\n            <label>Progress</label>\r\n            <span className=\"progress-bar\">\r\n              <div className=\"progress-bar__bar\">\r\n                <span className=\"fill\" style={{\r\n                  width: Math.min(progress, 100) + '%'\r\n                }}></span>\r\n              </div>\r\n              <span className=\"progress-bar__label\">{Math.floor(progress)}%</span>\r\n            </span>\r\n          </>\r\n        );\r\n        break;\r\n      case TYPE_DEADLINE:\r\n        const pad = (num, length) => {\r\n          let numString = num + '';\r\n          while (numString.length < length)\r\n            numString = '0' + numString;\r\n          return numString;\r\n        }\r\n        const convertInputToConfig = (value) =>\r\n          value ? new Date(value).toISOString() : null;\r\n        const convertConfigToInput = (config) => {\r\n          if (!config)\r\n            return '';\r\n\r\n          const date = new Date(config);\r\n          return pad(date.getFullYear(), 4)\r\n            + '-'\r\n            + pad(date.getMonth() + 1, 2)\r\n            + '-'\r\n            + pad(date.getDate(), 2);\r\n        }\r\n        const daysLeft = daily.typeConfig ?\r\n          Math.ceil((new Date(daily.typeConfig) - new Date()) / (24 * 60 * 60 * 1000))\r\n          : '?';\r\n        controls = (\r\n          <>\r\n            <label htmlFor=\"deadline\">Deadline</label>\r\n            <span>\r\n              <input\r\n                type=\"date\"\r\n                name=\"deadline\"\r\n                onChange={(e) => this.props.onConfigureDailyType(subgoal, convertInputToConfig(e.target.value))}\r\n                value={convertConfigToInput(daily.typeConfig)}\r\n              />\r\n            </span>\r\n            <label>Progress</label>\r\n            <span>\r\n              <b className=\"boxed-text\">{daysLeft}</b> days until deadline,&nbsp;\r\n              <b className=\"boxed-text\">{daily.history.length}</b> completions\r\n            </span>\r\n          </>\r\n        );\r\n        break;\r\n      default:\r\n        controls = <></>;\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <label htmlFor=\"type\">Type</label>\r\n        <span>\r\n          <select\r\n            name=\"type\"\r\n            value={daily.type}\r\n            onChange={(e) => this.props.onChangeDailyType(subgoal, e.target.value)}\r\n          >\r\n            <option value={TYPE_MANUAL}>Manual</option>\r\n            <option value={TYPE_TARGET}>Target</option>\r\n            <option value={TYPE_DEADLINE}>Deadline</option>\r\n          </select>\r\n        </span>\r\n        {controls}\r\n      </>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const subgoal = this.props.subgoal;\r\n    if (!subgoal) {\r\n      // Sanity check\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <div className=\"subgoal-modal-container\">\r\n        <header>\r\n          {\r\n            /* We use a content editable here because we want an h3 tag (1) which\r\n             * grows in response to its content length: e.g. if a user types out a\r\n             * long title, we want multiple lines (but only single line if required)\r\n             */\r\n          }\r\n          <ContentEditable\r\n            className=\"editable\"\r\n            innerRef={this.titleRef}\r\n            html={this.props.subgoal.name}\r\n            disabled={false}\r\n            onChange={this.handleInputTitle}\r\n            tagName=\"h3\"\r\n            onPaste={this.handlePasteAsPlainText}\r\n          />\r\n\r\n          <button\r\n            className=\"button-close\"\r\n            onClick={this.props.onRequestClose}\r\n          >\r\n            <i className=\"fas fa-times\"></i>\r\n          </button>\r\n        </header>\r\n\r\n        <div className=\"columns\">\r\n          <section className=\"column-main\">\r\n            {/* Progress section */}\r\n            <h4>Progress</h4>\r\n            {this.renderProgress()}\r\n\r\n            {/* Daily section (if applicable) */}\r\n            {isDailyGoal(subgoal) && this.renderDaily()}\r\n          </section>\r\n          <aside className=\"column-aside\">\r\n            {isLeafNode(subgoal) ?\r\n              <>\r\n                <button\r\n                  className=\"button-side\"\r\n                  onClick={() => this.props.onToggleComplete(subgoal)}\r\n                >\r\n                  Mark as {subgoal.completed ? 'incomplete' : 'complete'}\r\n                </button>\r\n                <button\r\n                  className=\"button-side\"\r\n                  onClick={() => this.props.onToggleDaily(subgoal)}\r\n                >\r\n                  {isDailyGoal(subgoal) ? 'Convert to regular' : 'Convert to daily'}\r\n                </button>\r\n              </>\r\n            :\r\n              <button\r\n                className=\"button-side\"\r\n                onClick={this.handleViewChildren}\r\n              >\r\n                View children\r\n              </button>\r\n            }\r\n            <button\r\n              className=\"button-side\"\r\n              onClick={() => this.props.onDelete(subgoal, this.props.onRequestClose)}\r\n            >\r\n              Delete goal\r\n            </button>\r\n          </aside>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default EditSubgoalModal;","import { connect } from 'react-redux';\r\n\r\nimport { setGoalName, toggleGoalComplete, deleteGoal, getGoalsWithCompleteness, addToDaily, removeLatestFromDaily, setDailyType, configureDailyType, toggleGoalDaily } from '../ducks/goals.js';\r\nimport { setSelectedGoal } from '../ducks/page.js';\r\nimport EditSubgoalModal from '../components/page-goal/EditSubgoalModal.js';\r\nimport { findGoalById } from '../logic/goalSelectors.js';\r\nimport { openConfirmDialog } from '../ducks/dialog.js';\r\n\r\nfunction onDelete(dispatch, subgoal, onDeleted) {\r\n  const subgoalId = subgoal.id;\r\n  dispatch(\r\n    openConfirmDialog(\r\n      'Are you sure you want to delete this goal? This action cannot be undone',\r\n      () => {\r\n        dispatch(deleteGoal(subgoalId));\r\n        onDeleted();\r\n      },\r\n      () => {}\r\n    )\r\n  );\r\n}\r\n\r\nfunction onMarkDay(dispatch, subgoal, date) {\r\n  const now = new Date();\r\n\r\n  // If we are marking today, then use now's time as well. \r\n  if (date.getFullYear() === now.getFullYear()\r\n      && date.getMonth() === now.getMonth()\r\n      && date.getDate() === now.getDate()) {\r\n    dispatch(addToDaily(subgoal.id, now.toISOString()));\r\n  } else {\r\n    dispatch(addToDaily(subgoal.id, date.toISOString()));\r\n  }\r\n}\r\n\r\nfunction onUnmarkDay(dispatch, subgoal, date) {\r\n  dispatch(removeLatestFromDaily(subgoal.id, date.toISOString()));\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => ({\r\n  subgoal: findGoalById(getGoalsWithCompleteness(state), ownProps.subgoalId)\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onChangeTitle: (subgoal, title) => dispatch(setGoalName(subgoal.id, title)),\r\n  onToggleComplete: (subgoal) => dispatch(toggleGoalComplete(subgoal.id)),\r\n  onViewChildren: (subgoal) => dispatch(setSelectedGoal(subgoal.id)),\r\n  onDelete: (subgoal, onDeleted) => onDelete(dispatch, subgoal, onDeleted),\r\n  onMarkDay: (subgoal, date) => onMarkDay(dispatch, subgoal, date),\r\n  onUnmarkDay: (subgoal, date) => onUnmarkDay(dispatch, subgoal, date),\r\n  onChangeDailyType: (subgoal, type) => dispatch(setDailyType(subgoal.id, type)),\r\n  onConfigureDailyType: (subgoal, config) => dispatch(configureDailyType(subgoal.id, config)),\r\n  onToggleDaily: (subgoal) => dispatch(toggleGoalDaily(subgoal.id))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EditSubgoalModal);","import React from 'react';\r\n\r\nimport './SubgoalListItem.scss';\r\n\r\nconst SubgoalListItem = ({\r\n  hasChildren,\r\n  isComplete,\r\n  isExpanded,\r\n  isDaily,\r\n  onToggleExpanded,\r\n  onClick,\r\n  onComplete,\r\n  onOpenMenu,\r\n  depth,\r\n  children\r\n}) => {\r\n  const anchorRef = React.createRef();\r\n\r\n  return (\r\n    <div\r\n      className={`subgoal-list-item depth-${depth} ${isComplete ? 'complete' : ''}`}\r\n    >\r\n\r\n      {/* Complete/check button */}\r\n      <button\r\n        href=\"#\"\r\n        className='button-complete'\r\n        onClick={onComplete}\r\n        disabled={hasChildren}\r\n      >\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n\r\n      {/* Main text */}\r\n      <div\r\n        className=\"subgoal-list-item-text\"\r\n        onClick={onClick}\r\n      >\r\n        {children}\r\n      </div>\r\n\r\n      {/* Expand/collapse button/indicator */}\r\n      {hasChildren && \r\n        <div\r\n          className=\"toggle-expand\"\r\n          onClick={onToggleExpanded}\r\n        >\r\n          <i className={'fas fa-chevron-' + (isExpanded ? 'up' : 'down')}></i>\r\n        </div>\r\n      }\r\n\r\n      {/* Daily goal indicator */}\r\n      {isDaily &&\r\n        <span className=\"daily-indicator\">\r\n          <i className=\"fas fa-calendar\"></i>\r\n        </span>\r\n      }\r\n\r\n      {/* Overflow button */}\r\n      <button\r\n        href=\"#\"\r\n        className=\"button-overflow\"\r\n        onClick={() => onOpenMenu(anchorRef)}\r\n      >\r\n        <i\r\n          ref={anchorRef}\r\n          className=\"fas fa-ellipsis-v\"\r\n        >\r\n        </i>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubgoalListItem;","import Tree from '@atlaskit/tree';\r\nimport React, { Component } from 'react';\r\nimport ReactModal from 'react-modal';\r\nimport { flattenGoals, findGoalById } from '../../logic/goalSelectors.js';\r\nimport { isGoalCompleted, isAllowedChildren, isDailyGoal } from '../../logic/goalProcessing.js';\r\nimport OverflowMenu from '../common/OverflowMenu.js';\r\nimport EditSubgoalModalContainer from '../../containers/EditSubgoalModalContainer.js';\r\nimport SubgoalListItem from './SubgoalListItem.js';\r\nimport './SubgoalList.scss';\r\n\r\nclass SubgoalList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.getTreeData = this.getTreeData.bind(this);\r\n    this.renderItem = this.renderItem.bind(this);\r\n    this.convertGoalToTreeItem = this.convertGoalToTreeItem.bind(this);\r\n    \r\n    this.handleOpenMenu = this.handleOpenMenu.bind(this);\r\n    this.handleCloseMenu = this.handleCloseMenu.bind(this);\r\n    this.handleExpand = this.handleExpand.bind(this);\r\n    this.handleCollapse = this.handleCollapse.bind(this);\r\n    this.handleDragEnd = this.handleDragEnd.bind(this);\r\n\r\n    this.openSubgoalDialog = this.openSubgoalDialog.bind(this);\r\n    this.closeSubgoalDialog = this.closeSubgoalDialog.bind(this);\r\n\r\n    this.state = {\r\n      menu: {\r\n        open: false,\r\n        anchorRef: null,\r\n        items: []\r\n      },\r\n      modal: {\r\n        open: false,\r\n        subgoal: null\r\n      },\r\n      collapsedGoals: {}\r\n    };\r\n  }\r\n\r\n  convertGoalToTreeItem(goal) {\r\n    return {\r\n      id: goal.id,\r\n      children: goal.subgoals.map((sg) => sg.id),\r\n      hasChildren: goal.subgoals.length > 0,\r\n      isExpanded: !(goal.id in this.state.collapsedGoals),\r\n      isChildrenLoading: false,\r\n      data: { goal: goal }\r\n    };\r\n  }\r\n\r\n  getTreeData() {\r\n    // Form list of tree items from list of goals\r\n    const items = flattenGoals(this.props.goal.subgoals)\r\n      .map(this.convertGoalToTreeItem);\r\n\r\n    // Add the root node, i.e. the goal this subgoal list is tied to\r\n    items.push(this.convertGoalToTreeItem(this.props.goal));\r\n\r\n    // Return a TreeData type for the @atlaskit/tree package\r\n    return {\r\n      rootId: this.props.goal.id,\r\n      items: items.reduce((acc, cur) => {\r\n        acc[cur.id] = cur;\r\n        return acc;\r\n      }, {})\r\n    }\r\n  }\r\n\r\n  handleCollapse(itemId) {\r\n    this.setState(state => {\r\n      let newState = { ...state };\r\n\r\n      newState.collapsedGoals[itemId] = true;\r\n\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  handleExpand(itemId) {\r\n    this.setState(state => {\r\n      let newState = { ...state };\r\n\r\n      if (itemId in newState.collapsedGoals) {\r\n        delete newState.collapsedGoals[itemId];\r\n      }\r\n\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  handleOpenMenu(subgoal, anchorRef) {\r\n    this.setState(state => {\r\n      let newState = { ...state };\r\n\r\n      newState.menu = {\r\n        open: true,\r\n        anchorRef: anchorRef,\r\n        items: [\r\n          { text: 'Edit subgoal', onClick: () => { this.openSubgoalDialog(subgoal.id); } },\r\n          { text: 'Delete subgoal', onClick: () => { this.props.onDeleteGoal(subgoal.id); } }\r\n        ]\r\n      };\r\n\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  handleCloseMenu() {\r\n    this.setState(state => {\r\n      let newState = { ...state };\r\n\r\n      newState.menu = {\r\n        open: false,\r\n        anchorRef: null,\r\n        items: []\r\n      };\r\n\r\n      return newState;\r\n    });\r\n  }\r\n\r\n  handleDragEnd(src, dst) {\r\n    // Sanity check; dst is null when we do nothing\r\n    if (!dst)\r\n      return;\r\n    \r\n    // Find parent goal, and stop if we can't\r\n    const parentGoal = findGoalById([ this.props.goal ], dst.parentId);\r\n    if (parentGoal === null)\r\n      return;\r\n\r\n    if (isAllowedChildren(parentGoal)) {\r\n      this.props.onDragEnd(src, dst);\r\n    } else {\r\n      this.props.onErrorNotification('Daily goals cannot have subgoals');\r\n    }\r\n  }\r\n\r\n  openSubgoalDialog(subgoalId) {\r\n    this.setState(state => {\r\n      let newState = { ...state };\r\n\r\n      newState.modal.open = true;\r\n      newState.modal.subgoalId = subgoalId;\r\n\r\n      return newState;\r\n    })\r\n  }\r\n\r\n  closeSubgoalDialog() {\r\n    this.setState(state => {\r\n      let newState = { ...state };\r\n      \r\n      newState.modal.open = false;\r\n      setTimeout(() => {\r\n        newState.modal.subgoal = null;\r\n      }, 200); // TODO make 200 const\r\n\r\n      return newState;\r\n    })\r\n  }\r\n\r\n  renderItem({ item, depth, onExpand, onCollapse, provided, snapshot }) {\r\n    const toggleExpanded = () => item.isExpanded ? onCollapse(item.id) : onExpand(item.id);\r\n    const subgoal = item.data.goal;\r\n\r\n    return (\r\n      <span\r\n        ref={provided.innerRef}\r\n        {...provided.draggableProps}\r\n        {...provided.dragHandleProps}\r\n        style={provided.draggableProps.style}\r\n      >\r\n        <SubgoalListItem\r\n          hasChildren={item.hasChildren}\r\n          isComplete={isGoalCompleted(subgoal)}\r\n          isExpanded={item.isExpanded}\r\n          isDaily={isDailyGoal(subgoal)}\r\n          onToggleExpanded={toggleExpanded}\r\n          onClick={() => this.openSubgoalDialog(subgoal.id)}\r\n          onComplete={() => this.props.onCompleteGoal(subgoal.id)}\r\n          onOpenMenu={(anchorRef) => this.handleOpenMenu(subgoal, anchorRef)}\r\n          depth={depth}\r\n        >\r\n          { subgoal.name }\r\n        </SubgoalListItem>\r\n      </span>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const tree = this.getTreeData();\r\n\r\n    return (\r\n      <div className=\"subgoal-list\">\r\n        <Tree\r\n          tree={tree}\r\n          renderItem={this.renderItem}\r\n          onExpand={this.handleExpand}\r\n          onCollapse={this.handleCollapse}\r\n          onDragEnd={this.handleDragEnd}\r\n          offsetPerLevel={0}\r\n          isDragEnabled\r\n          isNestingEnabled\r\n        />\r\n\r\n        <AddSubgoal\r\n          onAddKeyPress={(e) => this.props.onAddKeyPress(e, this.props.goal.id)}\r\n          depth={this.props.newSubgoalDepth} />\r\n\r\n        <OverflowMenu\r\n          visible={this.state.menu.open}\r\n          items={this.state.menu.items}\r\n          anchorRef={this.state.menu.anchorRef}\r\n          onCloseMenu={this.handleCloseMenu}\r\n        ></OverflowMenu>\r\n\r\n        <ReactModal\r\n          isOpen={this.state.modal.open}\r\n          contentLabel=\"Edit subgoal\"\r\n          onRequestClose={this.closeSubgoalDialog}\r\n          overlayClassName=\"modal-overlay\"\r\n          className=\"subgoal-modal\"\r\n          closeTimeoutMS={200}\r\n        >\r\n          <EditSubgoalModalContainer\r\n            subgoalId={this.state.modal.subgoalId}\r\n            onRequestClose={this.closeSubgoalDialog}\r\n          />\r\n        </ReactModal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst AddSubgoal = ({ onAddKeyPress, depth }) =>\r\n  <div className={`subgoal-list-item subgoal-list-add depth-${depth}`}>\r\n    <div\r\n      className=\"subgoal-list-item-text\"\r\n      placeholder=\"Type here\"\r\n      contentEditable=\"true\"\r\n      onKeyDown={onAddKeyPress} />\r\n    <i className=\"fas fa-plus button-add\"></i>\r\n  </div>\r\n\r\nexport default SubgoalList;","// Actions\r\nconst SHOW_NOTIFICATION = 'subgoals/notifications/SHOW_NOTIFICATION';\r\nconst DISMISS_NOTIFICATION = 'subgoals/notifications/DISMISS_NOTIFICATION';\r\n\r\n// Reducer\r\nconst INITIAL_STATE = {\r\n  notifications: [\r\n  ]\r\n};\r\n\r\nexport default function reducer(state = INITIAL_STATE, action) {\r\n  switch (action.type) {\r\n    case SHOW_NOTIFICATION: {\r\n      const notifications = [...state.notifications];\r\n      notifications.push({\r\n        message: action.message,\r\n        key: action.key,\r\n        action: action.action,\r\n        dismissAfter: action.dismissAfter\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        notifications\r\n      };\r\n    }\r\n    \r\n    case DISMISS_NOTIFICATION: {\r\n      const notifications = [...state.notifications];\r\n      const index = notifications.findIndex(n => n.key === action.key);\r\n      if (index > -1) {\r\n        notifications.splice(index, 1);\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        notifications\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// Action creators\r\nexport function showNotification(key, message, action, dismissAfter) {\r\n  return {\r\n    type: SHOW_NOTIFICATION,\r\n    message,\r\n    key,\r\n    action,\r\n    dismissAfter\r\n  };\r\n}\r\n\r\nexport function dismissNotification(key) {\r\n  return {\r\n    type: DISMISS_NOTIFICATION,\r\n    key\r\n  };\r\n}","import { connect } from 'react-redux';\r\nimport { addSubgoal, moveSubgoal, deleteGoal, toggleGoalComplete } from '../ducks/goals.js';\r\nimport { openConfirmDialog } from '../ducks/dialog.js';\r\n\r\nimport SubgoalList from '../components/page-goal/SubgoalList.js';\r\nimport { showNotification } from '../ducks/notifications.js';\r\n\r\nfunction onAddKeyPress(dispatch, e, goalId) {\r\n  if (e.key === 'Enter' && !e.shiftKey) {    \r\n    dispatch(addSubgoal(e.target.textContent, goalId));\r\n    e.preventDefault();\r\n    e.target.textContent = '';\r\n  }\r\n}\r\n\r\nfunction onDragEnd(dispatch, src, dst) {\r\n  dispatch(moveSubgoal(src, dst));\r\n}\r\n\r\nfunction onDeleteGoal(dispatch, goalId) {\r\n  // TODO: make DRYer; duplicated in EditSubgoalModalContainer.\r\n  dispatch(\r\n    openConfirmDialog(\r\n      'Are you sure you want to delete this goal? This action cannot be undone',\r\n      () => { dispatch(deleteGoal(goalId)); },\r\n      () => {}\r\n    )\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  newSubgoalDepth: state.page.newSubgoalDepth\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onAddKeyPress: (e, goalId) => onAddKeyPress(dispatch, e, goalId),\r\n  onDragEnd: (src, dst) => onDragEnd(dispatch, src, dst),\r\n  onDeleteGoal: (goalId) => onDeleteGoal(dispatch, goalId),\r\n  onCompleteGoal: (goalId) => dispatch(toggleGoalComplete(goalId)),\r\n  onErrorNotification: (message) => dispatch(showNotification(\r\n    new Date().getTime(), // Use Unix timestamp as 'unique key'\r\n    message,              // Message to show\r\n    'Dismiss',            // Action text\r\n    5000                  // Dismiss after 5s\r\n  ))\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(SubgoalList);","import React, { Component } from 'react';\r\nimport EditableSubgoalList from '../../containers/EditableSubgoalList.js';\r\n\r\nclass PageGoal extends Component {\r\n  render() {\r\n    const goal = this.props.goal;\r\n\r\n    return (\r\n      <EditableSubgoalList goal={goal} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default PageGoal;","import React from 'react';\r\nimport './NavBar.scss';\r\n\r\n const NavBar = ({ title, color, hasBack, onGoBack }) =>\r\n  <header className={`nav-bar bg-${color}`}>\r\n    <div className=\"page-width page-margins\">\r\n      {hasBack ?\r\n        (\r\n          <button href=\"#\" className=\"back-button\" onClick={onGoBack}>\r\n            <i className=\"fas fa-arrow-left\"></i>\r\n          </button>\r\n        )\r\n        : ''}\r\n      <h1>{title}</h1>\r\n    </div>\r\n  </header>;\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport ReactModal from 'react-modal';\r\n\r\nimport './Dialog.scss';\r\n\r\nconst Dialog = ({ isOpen, onClose, children }) => {\r\n  return (\r\n    <ReactModal\r\n      isOpen={isOpen}\r\n      contentLabel=\"Dialog\" // TODO\r\n      onRequestClose={onClose}\r\n      overlayClassName=\"dialog-overlay\"\r\n      className=\"dialog\"\r\n      closeTimeoutMS={200}\r\n    >\r\n      {children}\r\n    </ReactModal>\r\n  );\r\n}\r\n\r\nexport default Dialog;","import React from 'react';\r\nimport Dialog from './Dialog.js';\r\n\r\nconst InfoDialog = (props) => {\r\n  return (\r\n    <Dialog {...props}>\r\n      <header>\r\n        <h3>Information</h3>\r\n        <button onClick={props.onClose}><i className=\"fas fa-times\"></i></button>\r\n      </header>\r\n      <section>\r\n        { props.text }\r\n      </section>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default InfoDialog;","import React from 'react';\r\nimport Dialog from './Dialog.js';\r\n\r\nimport './ConfirmDialog.scss';\r\n\r\nconst ConfirmDialog = (props) => {\r\n  const { text, ...others } = props;\r\n  return (\r\n    <Dialog {...others}>\r\n      <header>\r\n        <h3>Are you sure?</h3>\r\n        <button onClick={props.onClose}><i className=\"fas fa-times\"></i></button>\r\n      </header>\r\n      <section>\r\n        <p>{ props.text }</p>\r\n        <div className=\"buttons\">\r\n          <button\r\n            className=\"button button--primary\"\r\n            onClick={() => {props.onClose(); props.onAccept();}}\r\n          >\r\n            Yes\r\n          </button>\r\n          <button\r\n            className=\"button\"\r\n            onClick={() => {props.onClose(); props.onReject();}}\r\n          >\r\n            No\r\n          </button>\r\n        </div>\r\n      </section>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default ConfirmDialog;","import React, { Component } from 'react';\r\nimport Dialog from './Dialog.js';\r\n\r\nimport './InputDialog.scss';\r\n\r\nclass InputDialog extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.handleChangeInput = this.handleChangeInput.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n\r\n    this.state = {\r\n      value: props.value\r\n    };\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    e.preventDefault();\r\n    this.props.onClose();\r\n    this.props.onAccept(this.state.value);\r\n  }\r\n\r\n  handleChangeInput(e) {\r\n    this.setState({\r\n      value: e.target.value\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // Reset value if we're reopening an existing dialog component\r\n    if (this.props.value !== nextProps.value) {\r\n      this.setState({\r\n        value: nextProps.value\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { text, ...others } = this.props;\r\n\r\n    return (\r\n      <Dialog {...others}>\r\n        <header>\r\n          <h3>{this.props.text}</h3>\r\n          <button onClick={this.props.onClose}><i className=\"fas fa-times\"></i></button>\r\n        </header>\r\n        <section>\r\n          <form\r\n            action=\"\"\r\n            onSubmit={this.handleSubmit}\r\n          >\r\n            <p>\r\n              <input\r\n                type=\"text\"\r\n                className=\"large-input\"\r\n                onChange={this.handleChangeInput}\r\n                value={this.state.value}\r\n                autoFocus={true}\r\n              />\r\n            </p>\r\n            <div className=\"buttons\">\r\n              <button\r\n                className=\"button button--primary\"\r\n                type=\"submit\"\r\n              >\r\n                OK\r\n              </button>\r\n              <button\r\n                className=\"button\"\r\n                type=\"button\"\r\n                onClick={() => {this.props.onClose(); this.props.onReject();}}\r\n              >\r\n                Cancel\r\n              </button>\r\n            </div>\r\n          </form>\r\n        </section>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InputDialog;","import React, { Component } from 'react';\r\nimport Dialog from './Dialog.js';\r\nimport { getNumGoalColors } from '../../logic/goalProcessing.js';\r\n\r\nimport './ColorPickerDialog.scss';\r\n\r\nclass ColorPickerDialog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.renderColorButtons = this.renderColorButtons.bind(this);\r\n\r\n    this.state = this.generateInitialState(props);\r\n  }\r\n\r\n  generateInitialState(props) {\r\n    return {\r\n      selected: props.value || 'color-0'\r\n    };\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    // If we're re-opening, update the state as if we were constructing\r\n    if (!this.props.isOpen && nextProps.isOpen) {\r\n      this.setState(this.generateInitialState(nextProps));\r\n    }\r\n  }\r\n\r\n  handleChangeSelected(newSelected) {\r\n    this.setState({\r\n      selected: newSelected\r\n    })\r\n  }\r\n\r\n  renderColorButtons() {\r\n    let buttons = [];\r\n    for (let i = 0; i < getNumGoalColors(); i++) {\r\n      const selectedClass = `color-${i}` === this.state.selected ? 'selected' : '';\r\n      buttons.push(\r\n        <button\r\n          key={i}\r\n          className={`color-button bg-color-${i} ${selectedClass}`}\r\n          onClick={() => this.handleChangeSelected(`color-${i}`)}\r\n        >\r\n          <i className=\"fas fa-check\"></i>\r\n        </button>\r\n      );\r\n    }\r\n    return buttons;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Dialog {...this.props}>\r\n        <header>\r\n          <h3>Choose colour</h3>\r\n          <button onClick={this.props.onClose}><i className=\"fas fa-times\"></i></button>\r\n        </header>\r\n        <section>\r\n          <div className=\"color-picker\">\r\n            {this.renderColorButtons()}\r\n          </div>\r\n          <div className=\"buttons\">\r\n            <button\r\n              className=\"button button--primary\"\r\n              onClick={() => {this.props.onClose(); this.props.onAccept(this.state.selected);}}\r\n            >\r\n              OK\r\n            </button>\r\n            <button\r\n              className=\"button\"\r\n              onClick={() => {this.props.onClose(); this.props.onReject();}}\r\n            >\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </section>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ColorPickerDialog;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { DIALOG_TYPE_CONFIRM, DIALOG_TYPE_INFO, DIALOG_TYPE_INPUT, closeDialog, DIALOG_TYPE_COLORPICKER } from '../ducks/dialog.js';\r\nimport InfoDialog from '../components/dialog/InfoDialog.js';\r\nimport ConfirmDialog from '../components/dialog/ConfirmDialog.js';\r\nimport InputDialog from '../components/dialog/InputDialog.js';\r\nimport ColorPickerDialog from '../components/dialog/ColorPickerDialog.js';\r\n\r\nconst GlobalDialog = (props) => {\r\n  if (props.type === DIALOG_TYPE_CONFIRM) {\r\n    return <ConfirmDialog {...props} />;\r\n  } else if (props.type === DIALOG_TYPE_INFO) {\r\n    return <InfoDialog {...props} />;\r\n  } else if (props.type === DIALOG_TYPE_INPUT) {\r\n    return <InputDialog {...props} />;\r\n  } else if (props.type === DIALOG_TYPE_COLORPICKER) {\r\n    return <ColorPickerDialog {...props} />;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    type: state.dialog.type,\r\n    text: state.dialog.message,\r\n    isOpen: state.dialog.isOpen,\r\n    onAccept: state.dialog.onAccept,\r\n    onReject: state.dialog.onReject,\r\n    value: state.dialog.value\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onClose: () => dispatch(closeDialog())\r\n  };\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(GlobalDialog);","import { connect } from 'react-redux';\r\nimport { NotificationStack } from 'react-notification';\r\nimport { dismissNotification } from '../ducks/notifications';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    notifications: state.notifications.notifications\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onDismiss: (notification) => {\r\n      dispatch(dismissNotification(notification.key));\r\n    }\r\n  };\r\n}\r\n\r\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\r\n  return {\r\n    ...stateProps,\r\n    ...dispatchProps,\r\n    ...ownProps,\r\n\r\n    // We need to inject click handlers into the notification objects as given\r\n    // in the state. There are probably better ways to do this (e.g. wrap the\r\n    // NotificationStack component in another, and then just access the\r\n    // onDismiss function from props), but this way is more fun.\r\n    notifications: stateProps.notifications.map(notification => {\r\n      return {\r\n        ...notification,\r\n        onClick: (notification, deactivate) => {\r\n          deactivate();\r\n          dispatchProps.onDismiss(notification);\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps,\r\n  mergeProps\r\n)(NotificationStack);","import React from 'react';\r\n\r\nimport { getGoalColor } from '../logic/goalProcessing.js';\r\n\r\n// Pages\r\nimport PageMain from './page-main/PageMain.js';\r\nimport PageGoal from './page-goal/PageGoal.js';\r\nimport NavBar from './common/NavBar.js';\r\n\r\n// CSS\r\nimport './App.scss';\r\nimport GlobalDialog from '../containers/GlobalDialog.js';\r\nimport GlobalNotification from '../containers/GlobalNotification.js';\r\n\r\nconst App = ({ title, selectedGoal, hasBack, onGoBack }) => {\r\n  const color = selectedGoal != null\r\n    ? (selectedGoal.color\r\n      || getGoalColor(selectedGoal))\r\n    : 'primary';\r\n\r\n  return (\r\n    <div id=\"main\">\r\n      <NavBar\r\n        title={title}\r\n        hasBack={hasBack}\r\n        onGoBack={onGoBack}\r\n        color={color} />\r\n      <section id=\"body\" className=\"page-width page-margins\">\r\n        {\r\n          selectedGoal == null ?\r\n            <PageMain /> :\r\n            <PageGoal goal={selectedGoal} />\r\n        }\r\n      </section>\r\n      <GlobalDialog />\r\n      <GlobalNotification />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;","import { connect } from 'react-redux';\r\n\r\nimport { findGoalById } from '../logic/goalSelectors.js';\r\nimport { getGoalsWithCompleteness } from '../ducks/goals.js';\r\nimport { goBack } from '../ducks/page.js';\r\nimport App from '../components/App.js';\r\n\r\nconst mapStateToProps = state => {\r\n  const goal = findGoalById(\r\n    getGoalsWithCompleteness(state),\r\n    state.page.selectedGoalId\r\n  );\r\n\r\n  return {\r\n    selectedGoal: goal,\r\n    title: state.page.selectedGoalId === null ? 'Subgoals' : goal.name,\r\n    hasBack: state.page.history.length > 0\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  onGoBack: () => dispatch(goBack())\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(App);","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport { save, load } from 'redux-localstorage-simple';\r\nimport * as reducers from '../ducks/index.js';\r\n\r\nconst root = combineReducers(reducers);\r\nconst createStoreWithMiddleware = applyMiddleware(\r\n  save(['goals', 'page'])\r\n)(createStore);\r\nconst store = createStoreWithMiddleware(\r\n  root,\r\n  load() // Preload state\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactModal from 'react-modal';\nimport { Provider } from 'react-redux';\n\nimport '@fortawesome/fontawesome-free/css/fontawesome.css';\nimport '@fortawesome/fontawesome-free/css/solid.css';\nimport 'normalize.css';\nimport './index.scss';\n\nimport PagedApp from './containers/PagedApp';\nimport store from './store';\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <PagedApp />\n  </Provider>,\n  document.getElementById('root')\n);\n\nReactModal.setAppElement('#main');"],"sourceRoot":""}